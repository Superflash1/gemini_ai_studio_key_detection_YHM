name: Security Scan

on:
  # 手动触发
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to scan'
        required: false
        default: 'latest'
  
  # 每周运行一次
  schedule:
    - cron: '0 2 * * 1'  # 每周一凌晨2点

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gemini-key-checker

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set image tag
      id: tag
      run: |
        TAG="${{ github.event.inputs.image_tag || 'latest' }}"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "image=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:$TAG" >> $GITHUB_OUTPUT

    - name: Verify image exists
      run: |
        echo "Checking if image exists: ${{ steps.tag.outputs.image }}"
        if docker manifest inspect ${{ steps.tag.outputs.image }} >/dev/null 2>&1; then
          echo "✅ Image exists and is accessible"
        else
          echo "❌ Image not found or not accessible"
          echo "Available images:"
          docker search ${{ github.repository_owner }}/${{ env.IMAGE_NAME }} || true
          exit 1
        fi

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ steps.tag.outputs.image }}
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '0'  # 不因为漏洞而失败

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Generate security report
      run: |
        echo "## 🔒 Security Scan Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** ${{ steps.tag.outputs.image }}" >> $GITHUB_STEP_SUMMARY
        echo "**Scan Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # 运行Trivy并生成报告
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          aquasec/trivy:latest image --format table \
          ${{ steps.tag.outputs.image }} > scan_report.txt || true
          
        echo "**Scan Results:**" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        head -50 scan_report.txt >> $GITHUB_STEP_SUMMARY || echo "No vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY 