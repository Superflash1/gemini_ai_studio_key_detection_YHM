name: gemini-key-checker

on:
  push:
    branches:
      - main
      - v3.0
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - v3.0

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gemini-key-checker

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./v3.0
        file: ./v3.0/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Verify image push
      if: github.event_name != 'pull_request'
      run: |
        echo "✅ Docker image built and pushed successfully!"
        echo "📦 Image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"
        echo "🏷️  Tags: ${{ steps.meta.outputs.tags }}"
        
    # 暂时禁用Trivy扫描，等基本功能稳定后再启用
    # - name: Run Trivy vulnerability scanner
    #   if: github.event_name != 'pull_request'
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
    #     format: 'sarif'
    #     output: 'trivy-results.sarif'
    #     exit-code: '0'
    #   continue-on-error: true

    # - name: Upload Trivy scan results to GitHub Security tab
    #   if: github.event_name != 'pull_request' && always()
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-results.sarif'
    #   continue-on-error: true 